/* eslint-disable @typescript-eslint/no-explicit-any */
import "./App.css";
import { useState } from "react";
import { toast } from "react-toastify";
import { useGetUsersQuery } from "./redux/api/userApi";
interface IUser {
  _id: string;
  first_name: string;
  last_name: string;
  email: string;
  gender: string;
  domain: string;
  available: boolean;
  avatar: string;
}
function App() {
  const query: Record<string, any> = {};
  const [limit] = useState<number>(20);
  const [page, setPage] = useState<number>(1);
  const [filterField] = useState<string>("");
  const [search] = useState<string>("");
  const [sortOrder] = useState<string>("");
  const [sortField] = useState<string>("");

  query["limit"] = limit;
  query["page"] = page;
  query["filterField"] = filterField;
  query["search"] = search;
  query["sortOrder"] = sortOrder;
  query["sortField"] = sortField;

  const { data, isLoading } = useGetUsersQuery({ ...query });
  console.log("isLoading:", isLoading);
  console.log("data:", data);
  const users = data?.data;
  //const [foods, setFoods] = useState<any>(data);
  // const food = data?.data;
  // const [activeFilter, setActiveFilter] = useState<string>("");
  //=================pagination===================================
  const totalPage = Math.ceil(data?.meta?.total / limit);
  console.log("totalPage:", totalPage);
  const prevPage = () => {
    if (page > 1) {
      setPage(page - 1);
    } else {
      toast.warning("Page number can't be less than 1");
    }
  };
  const nextPage = () => {
    if (page < totalPage) {
      setPage(page + 1);
    } else {
      toast.warning("Page number can't be more than");
    }
  };
  //=================pagination======================================
  return (
    <>
      <div className="lg:px-48 md:px-20 px-4 text-black py-4 ">
        <div className=" text-3xl font-bold text-center ">Home Page</div>
        <div className=" ">
          <div className=" flex flex-wrap items-center w-full justify-center">
            {!isLoading &&
              users.length > 0 &&
              users.map((user: IUser) => (
                <div
                  key={user._id}
                  className=" shadow-md w-[350px] h-[350px] gap-2 bg-red-200 m-2 rounded "
                >
                  <img src={user.avatar} alt="avatar" className=" h-[100px]" />
                  <div className=" flex flex-col items-start justify-center px-3 ">
                    <p className="text-xl font-bold  ">
                      Name :{user.first_name} {user.last_name}
                    </p>
                    <p className=" text-xl font-bold ">Gender: {user.gender}</p>
                    <p className=" text-xl font-bold ">Domain:{user.domain} </p>
                    <p className=" text-xl font-bold ">Email:{user.email} </p>
                    <p className=" text-xl font-bold text-rose-500 flex  ">
                      Availability:{user.available ? <p>True</p> : <p>False</p>}
                    </p>
                  </div>
                </div>
              ))}
          </div>
        </div>
        {/*====================== Pagination Start============================*/}
        <div className="  py-2 border-black text-black items-center text-center ">
          <div className=" flex bg-gray-300 rounded-lg p-6  ">
            <button
              onClick={prevPage}
              className=" h-12 border-2 border-gray-600 px-4 rounded-l-lg hover:bg-gray-600 hover:text-white mr-2  "
            >
              <h3 className=" text-xl font-medium ">Prev</h3>
            </button>
            <button className=" h-12  px-4 rounded-lg  mr-2  ">
              {isLoading ? (
                <h3 className=" text-xl font-medium ">100/99</h3>
              ) : (
                <h3 className=" text-xl font-medium ">
                  {page}/{totalPage}
                </h3>
              )}
            </button>
            <button
              onClick={nextPage}
              className=" h-12 border-2 border-gray-600 px-4 rounded-r-lg hover:bg-gray-600 hover:text-white mr-2  "
            >
              <h3 className=" text-xl font-medium ">Next</h3>
            </button>
          </div>
        </div>
        {/*====================== Pagination End============================*/}
      </div>
    </>
  );
}

export default App;


  first_name ,  last_name ,   email , gender , avatar , domain , available

   page,limit,searchName, gender, domain,availability,sortOrder,sortField,